{"version":3,"sources":["../src/darkMode.js","../src/themeBuilder.js","../src/scroll.js","parallax.js","staggerChildren.js","index.js"],"names":["darkMode","wrapper","activeClass","active","trigger","allDarkModeElements","querySelectorAll","renderDarkMode","document","body","setAttribute","forEach","el","classList","add","localStorage","setItem","removeAttribute","remove","removeItem","getItem","addEventListener","themeBuilder","provider","currentTheme","initial","localStorageStatus","methods","setTheme","newValue","getCurrentTheme","scroll","threshold","console","log","parallax","ease","ticking","window","requestAnimationFrame","runParallax","viewDistanceLeft","parallaxSpeed","direction","pageYOffset","innerHeight","offsetTop","offsetHeight","parseFloat","getAttribute","hasAttribute","toLowerCase","style","transform","transition","staggerChildren","parent","animation","stagger","child","i","transitionDelay","animationDelay","giftbag","module","exports"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["export default function darkMode({ wrapper, activeClass = \"in-dark-mode\", active = false, trigger }) {\n    const allDarkModeElements = wrapper.querySelectorAll('*');\n\n    function renderDarkMode() {\n        // Logic behind rendering dark mode and setting local storage\n        if (active) {\n            document.body.setAttribute('data-dark-mode', true);\n            allDarkModeElements.forEach(el => {\n                el.classList.add(activeClass);\n            });\n            active = false;\n            localStorage.setItem(\"dark-mode\", \"true\");\n        } else {\n            allDarkModeElements.forEach(el => {\n                document.body.removeAttribute(\"data-dark-mode\");\n                el.classList.remove(activeClass);\n                active = true;\n                localStorage.removeItem(\"dark-mode\");\n            })\n        }\n    }\n\n    // Check if user was previously in darkmode\n    let localDarkModeStatus = localStorage.getItem(\"dark-mode\");\n\n    if (localDarkModeStatus) {\n        active = true\n    }\n\n    renderDarkMode();\n    trigger.addEventListener('click', renderDarkMode);\n}","export default function themeBuilder({ provider = document.body, initial }) {\n    const localStorageStatus = localStorage.getItem('current theme');\n    let currentTheme;\n\n    // Set the current theme based off localstorage first, else set to initial\n    if (localStorageStatus) {\n        currentTheme = localStorageStatus\n    } else {\n        currentTheme = initial\n    }\n\n    provider.setAttribute('data-theme', currentTheme);\n    localStorage.setItem('current theme', currentTheme);\n\n    const methods = {\n        setTheme(newValue) {\n            currentTheme = newValue\n            provider.setAttribute('data-theme', newValue);\n            localStorage.setItem('current theme', newValue);\n        },\n        getCurrentTheme() {\n            return currentTheme;\n        }\n    }\n\n    return methods;\n}\n","export default function scroll({ el, activeClass = 'in-view', threshold = 0.5 }) {\n    console.log(el)\n}","\n\nexport default function parallax({ el, ease = 'linear' }) {\n    let ticking = false;\n\n    function runParallax() {\n        const pageTop = window.pageYOffset;\n        const pageMid = pageTop + window.innerHeight / 2;\n\n        // Run this if it already has a data attribute set\n        const topSection = el.offsetTop;\n        const midSection = topSection + el.offsetHeight / 2;\n\n        const viewDistanceLeft = pageMid - midSection;\n        const parallaxSpeed = parseFloat(\n            el.getAttribute(\"data-parallax-speed\")\n        );\n\n        // Sets the parallax direction\n        let direction = \"\";\n\n        if (el.hasAttribute(\"data-parallax-direction\")) {\n            // Direction to value of the attribute\n            direction = el.getAttribute(\"data-parallax-direction\");\n        } else {\n            // Set default direction to vertical\n            direction = \"vertical\";\n        }\n\n        // Handle transform based on direction\n        if (direction.toLowerCase() === \"vertical\") {\n            el.style.transform = `translate3d(0, ${(viewDistanceLeft *\n                parallaxSpeed) /\n                3}px, 0)`;\n        } else if (direction.toLowerCase() === \"horizontal\") {\n            el.style.transform = `translate3d( ${(viewDistanceLeft *\n                parallaxSpeed) /\n                3}px, 0, 0)`;\n        }\n\n        el.style.transition = `transform ${ease}`;\n    }\n\n\n    window.addEventListener('scroll', () => {\n        if (!ticking) {\n            window.requestAnimationFrame(() => {\n                runParallax();\n                ticking = false;\n            })\n        };\n        ticking = true;\n    })\n}","export default function staggerChildren({ parent, transition = true, animation = false, stagger = 0.1 }) {\n    const children = parent.querySelectorAll('*');\n\n    children.forEach((child, i) => {\n        if (transition) {\n            child.style.transitionDelay = `${i * stagger}s`;\n        }\n        if (animation) {\n            child.style.animationDelay = `${i * stagger}s`;\n        }\n    })\n}","import darkMode from './darkMode'\nimport themeBuilder from './themeBuilder'\nimport scroll from './scroll'\nimport parallax from './parallax'\nimport staggerChildren from './staggerChildren'\n\nconst giftbag = () => {\n    const methods = {\n        darkMode,\n        themeBuilder,\n        scroll,\n        parallax,\n        staggerChildren\n    }\n\n    return methods\n}\n\nmodule.exports = giftbag;"]}